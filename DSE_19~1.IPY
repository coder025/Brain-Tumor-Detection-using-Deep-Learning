{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# DSE 309 Final Project Sambhav Agrawal 19264 Data Science and Engineering\n","metadata":{}},{"cell_type":"markdown","source":"# Brain Tumor Detection and Classification using Convolutional Neutral Networks","metadata":{}},{"cell_type":"markdown","source":"<center><img src=\"https://media.istockphoto.com/photos/brain-cancer-picture-id174927353?k=6&m=174927353&s=612x612&w=0&h=P3EzH6J-haFHzmKQ8RzkfotD_lsygXzNUL72Dg3pfK0=\",height='300',width='600'></center>","metadata":{}},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"# Importing Libraries","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport cv2\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tqdm import tqdm\nimport os\nfrom sklearn.utils import shuffle\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.applications import EfficientNetB0\nfrom tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau, TensorBoard, ModelCheckpoint\nfrom sklearn.metrics import classification_report,confusion_matrix\ncolors_dark = [\"#1F1F1F\", \"#313131\", '#636363', '#AEAEAE', '#DADADA']\ncolors_red = [\"#331313\", \"#582626\", '#9E1717', '#D35151', '#E9B4B4']\ncolors_green = ['#01411C','#4B6F44','#4F7942','#74C365','#D0F0C0']\n\nfrom IPython.display import display,clear_output\nfrom warnings import filterwarnings\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))","metadata":{"_kg_hide-output":true,"scrolled":true,"execution":{"iopub.status.busy":"2021-12-07T04:23:10.305038Z","iopub.execute_input":"2021-12-07T04:23:10.305367Z","iopub.status.idle":"2021-12-07T04:23:16.491859Z","shell.execute_reply.started":"2021-12-07T04:23:10.305284Z","shell.execute_reply":"2021-12-07T04:23:16.491173Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"# Data Preperation","metadata":{}},{"cell_type":"code","source":"labels = ['glioma_tumor','no_tumor','meningioma_tumor','pituitary_tumor']","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:16.493665Z","iopub.execute_input":"2021-12-07T04:23:16.493912Z","iopub.status.idle":"2021-12-07T04:23:16.499762Z","shell.execute_reply.started":"2021-12-07T04:23:16.493879Z","shell.execute_reply":"2021-12-07T04:23:16.496970Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"I have appended all the images from the  directories into a Python list and then transformed them into numpy arrays.","metadata":{}},{"cell_type":"code","source":"X_train = []\ny_train = []\nX_test = []\ny_test = []\nimage_size = 128\nfor i in labels:\n    folderPath = os.path.join('../input/brain-tumor-classification-mri','Training',i)\n    for j in tqdm(os.listdir(folderPath)):\n        img = cv2.imread(os.path.join(folderPath,j))\n        img = cv2.resize(img,(image_size, image_size))\n        X_train.append(img)\n        y_train.append(i)\n        \nfor i in labels:\n    folderPath = os.path.join('../input/brain-tumor-classification-mri','Testing',i)\n    for j in tqdm(os.listdir(folderPath)):\n        img = cv2.imread(os.path.join(folderPath,j))\n        img = cv2.resize(img,(image_size,image_size))\n        X_test.append(img)\n        y_test.append(i)\n        \nX_train = np.array(X_train)\ny_train = np.array(y_train)\nX_test = np.array(X_test)\ny_test = np.array(y_test)","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:16.503992Z","iopub.execute_input":"2021-12-07T04:23:16.504226Z","iopub.status.idle":"2021-12-07T04:23:43.520255Z","shell.execute_reply.started":"2021-12-07T04:23:16.504195Z","shell.execute_reply":"2021-12-07T04:23:43.519477Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"k=0\nfig, ax = plt.subplots(1,4,figsize=(10,10))\nfig.text(s='Sample Image From Each Label',size=10,fontweight='bold',\n             fontname='monospace',y=0.64,x=0.4,alpha=0.8)\nfor i in labels:\n    j=0\n    while True :\n        if y_train[j]==i:\n            ax[k].imshow(X_train[j])\n            ax[k].set_title(y_train[j])\n            ax[k].axis('off')\n            k+=1\n            break\n        j+=1","metadata":{"_kg_hide-input":true,"scrolled":true,"execution":{"iopub.status.busy":"2021-12-07T04:23:43.521421Z","iopub.execute_input":"2021-12-07T04:23:43.521699Z","iopub.status.idle":"2021-12-07T04:23:43.803878Z","shell.execute_reply.started":"2021-12-07T04:23:43.521665Z","shell.execute_reply":"2021-12-07T04:23:43.803233Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"X_train, y_train = shuffle(X_train,y_train, random_state=123)","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:43.806085Z","iopub.execute_input":"2021-12-07T04:23:43.806546Z","iopub.status.idle":"2021-12-07T04:23:43.854056Z","shell.execute_reply.started":"2021-12-07T04:23:43.806511Z","shell.execute_reply":"2021-12-07T04:23:43.853069Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"X_test.shape","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:43.855509Z","iopub.execute_input":"2021-12-07T04:23:43.855784Z","iopub.status.idle":"2021-12-07T04:23:43.861281Z","shell.execute_reply.started":"2021-12-07T04:23:43.855748Z","shell.execute_reply":"2021-12-07T04:23:43.860633Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":"Dividing the dataset into **Training** and **Testing** sets.","metadata":{}},{"cell_type":"code","source":"X_train,X_test,y_train,y_test = train_test_split(X_train,y_train, test_size=0.1,random_state=123)","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:43.862683Z","iopub.execute_input":"2021-12-07T04:23:43.863136Z","iopub.status.idle":"2021-12-07T04:23:43.911501Z","shell.execute_reply.started":"2021-12-07T04:23:43.863101Z","shell.execute_reply":"2021-12-07T04:23:43.910762Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"Performing **One Hot Encoding** on the labels after converting it into numerical values:","metadata":{}},{"cell_type":"code","source":"y_train_new = []\nfor i in y_train:\n    y_train_new.append(labels.index(i))\ny_train = y_train_new\ny_train = tf.keras.utils.to_categorical(y_train)\n\n\ny_test_new = []\nfor i in y_test:\n    y_test_new.append(labels.index(i))\ny_test = y_test_new\ny_test = tf.keras.utils.to_categorical(y_test)","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:43.912933Z","iopub.execute_input":"2021-12-07T04:23:43.913176Z","iopub.status.idle":"2021-12-07T04:23:43.921753Z","shell.execute_reply.started":"2021-12-07T04:23:43.913144Z","shell.execute_reply":"2021-12-07T04:23:43.920977Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"# CNN MODEL","metadata":{}},{"cell_type":"code","source":"from tensorflow.keras.applications.resnet50 import ResNet50\n","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:43.923206Z","iopub.execute_input":"2021-12-07T04:23:43.923460Z","iopub.status.idle":"2021-12-07T04:23:43.930491Z","shell.execute_reply.started":"2021-12-07T04:23:43.923425Z","shell.execute_reply":"2021-12-07T04:23:43.929853Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"resnet = ResNet50(weights='imagenet',include_top=False,input_shape=(image_size,image_size,3))","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:43.931673Z","iopub.execute_input":"2021-12-07T04:23:43.931921Z","iopub.status.idle":"2021-12-07T04:23:47.880783Z","shell.execute_reply.started":"2021-12-07T04:23:43.931889Z","shell.execute_reply":"2021-12-07T04:23:47.880045Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"model = resnet.output\nmodel = tf.keras.layers.GlobalAveragePooling2D()(model)\nmodel = tf.keras.layers.Dropout(rate=0.5)(model)\nmodel = tf.keras.layers.Dense(4,activation='softmax')(model)\nmodel = tf.keras.models.Model(inputs=resnet.input, outputs = model)","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:47.881918Z","iopub.execute_input":"2021-12-07T04:23:47.882161Z","iopub.status.idle":"2021-12-07T04:23:48.071768Z","shell.execute_reply.started":"2021-12-07T04:23:47.882128Z","shell.execute_reply":"2021-12-07T04:23:48.071076Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"model.summary()","metadata":{"scrolled":true,"_kg_hide-output":true,"execution":{"iopub.status.busy":"2021-12-07T04:23:48.072979Z","iopub.execute_input":"2021-12-07T04:23:48.073225Z","iopub.status.idle":"2021-12-07T04:23:48.157225Z","shell.execute_reply.started":"2021-12-07T04:23:48.073194Z","shell.execute_reply":"2021-12-07T04:23:48.156559Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":"We finally compile our model.","metadata":{}},{"cell_type":"code","source":"model.compile(loss='categorical_crossentropy',optimizer = 'Adam', metrics= ['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:48.158268Z","iopub.execute_input":"2021-12-07T04:23:48.158517Z","iopub.status.idle":"2021-12-07T04:23:48.175223Z","shell.execute_reply.started":"2021-12-07T04:23:48.158482Z","shell.execute_reply":"2021-12-07T04:23:48.174563Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"tensorboard = TensorBoard(log_dir = 'logs')\ncheckpoint = ModelCheckpoint(\"resnet.h5\",monitor=\"val_accuracy\",save_best_only=True,mode=\"auto\",verbose=1)\nreduce_lr = ReduceLROnPlateau(monitor = 'val_accuracy', factor = 0.3, patience = 1, min_delta = 0.001,\n                              mode='auto',verbose=1)","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:48.178997Z","iopub.execute_input":"2021-12-07T04:23:48.179180Z","iopub.status.idle":"2021-12-07T04:23:48.502537Z","shell.execute_reply.started":"2021-12-07T04:23:48.179158Z","shell.execute_reply":"2021-12-07T04:23:48.501485Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"model.save('resnet.h5')","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:23:48.503642Z","iopub.execute_input":"2021-12-07T04:23:48.504291Z","iopub.status.idle":"2021-12-07T04:23:48.922516Z","shell.execute_reply.started":"2021-12-07T04:23:48.504253Z","shell.execute_reply":"2021-12-07T04:23:48.921771Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"# Training The Model","metadata":{}},{"cell_type":"code","source":"history = model.fit(X_train,y_train,validation_split=0.1, epochs =20, verbose=1, batch_size=32,\n                   callbacks=[tensorboard,checkpoint,reduce_lr])","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2021-12-07T04:23:48.923820Z","iopub.execute_input":"2021-12-07T04:23:48.924073Z","iopub.status.idle":"2021-12-07T04:26:16.086120Z","shell.execute_reply.started":"2021-12-07T04:23:48.924042Z","shell.execute_reply":"2021-12-07T04:26:16.085227Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"filterwarnings('ignore')\n\nepochs = [i for i in range(20)]\nfig, ax = plt.subplots(1,2,figsize=(16,8))\ntrain_acc = history.history['accuracy']\ntrain_loss = history.history['loss']\nval_acc = history.history['val_accuracy']\nval_loss = history.history['val_loss']\n\nfig.text(s='Epochs vs. Training and Validation Accuracy and Loss',size=20,fontweight='bold',\n             color=colors_dark[1],y=1,x=0.3,alpha=0.8)\n\nsns.despine()\nax[0].plot(epochs, train_acc, marker='o',markerfacecolor=colors_green[2],color=colors_green[3],\n           label = 'Training Accuracy')\nax[0].plot(epochs, val_acc, marker='o',markerfacecolor=colors_red[2],color=colors_red[3],\n           label = 'Validation Accuracy')\nax[0].legend(frameon=False)\nax[0].set_xlabel('Epochs')\nax[0].set_ylabel('Accuracy')\n\nsns.despine()\nax[1].plot(epochs, train_loss, marker='o',markerfacecolor=colors_green[2],color=colors_green[3],\n           label ='Training Loss')\nax[1].plot(epochs, val_loss, marker='o',markerfacecolor=colors_red[2],color=colors_red[3],\n           label = 'Validation Loss')\nax[1].legend(frameon=False)\nax[1].set_xlabel('Epochs')\nax[1].set_ylabel('Training & Validation Loss')\n\nfig.show()","metadata":{"_kg_hide-input":true,"execution":{"iopub.status.busy":"2021-12-07T04:26:16.088082Z","iopub.execute_input":"2021-12-07T04:26:16.088357Z","iopub.status.idle":"2021-12-07T04:26:16.711876Z","shell.execute_reply.started":"2021-12-07T04:26:16.088321Z","shell.execute_reply":"2021-12-07T04:26:16.711160Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"# Prediction","metadata":{}},{"cell_type":"code","source":"pred = model.predict(X_test)\npred = np.argmax(pred,axis=1)\ny_test_new = np.argmax(y_test,axis=1)","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:26:16.712933Z","iopub.execute_input":"2021-12-07T04:26:16.713292Z","iopub.status.idle":"2021-12-07T04:26:17.870132Z","shell.execute_reply.started":"2021-12-07T04:26:16.713256Z","shell.execute_reply":"2021-12-07T04:26:17.869255Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"markdown","source":"# Evaluation","metadata":{}},{"cell_type":"markdown","source":"In this the following convention is used as shown below: <br>\n0 - Glioma Tumor<br>\n1 - No Tumor<br>\n2 - Meningioma Tumor<br>\n3 - Pituitary Tumor<br>","metadata":{}},{"cell_type":"code","source":"print(classification_report(y_test_new,pred))","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:26:17.871667Z","iopub.execute_input":"2021-12-07T04:26:17.871905Z","iopub.status.idle":"2021-12-07T04:26:17.883915Z","shell.execute_reply.started":"2021-12-07T04:26:17.871873Z","shell.execute_reply":"2021-12-07T04:26:17.882833Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"fig,ax=plt.subplots(1,1,figsize=(14,7))\nsns.heatmap(confusion_matrix(y_test_new,pred),ax=ax,xticklabels=labels,yticklabels=labels,annot=True,\n           alpha=0.7,linewidths=2,linecolor=colors_dark[3])\nfig.text(s='Heatmap of the Confusion Matrix',size=18,fontweight='bold',\n             color=colors_red[1],y=1,x=0.3,alpha=0.8)\n\nplt.show()","metadata":{"_kg_hide-input":true,"execution":{"iopub.status.busy":"2021-12-07T04:26:17.885365Z","iopub.execute_input":"2021-12-07T04:26:17.885655Z","iopub.status.idle":"2021-12-07T04:26:18.193502Z","shell.execute_reply.started":"2021-12-07T04:26:17.885618Z","shell.execute_reply":"2021-12-07T04:26:18.192776Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"code","source":"import colorama\nfrom colorama import Fore\n\n\n\nfor i in range(100):\n    if pred[i] == y_test_new[i] == 0:\n        print(Fore.GREEN + 'Correct Prediction Glioma')\n    \n    elif pred[i] == y_test_new[i] == 1:\n        print(Fore.GREEN + 'Correct Prediction No Tumor')\n    \n    elif pred[i] == y_test_new[i] == 2:\n        print(Fore.GREEN + 'Correct Prediction Meningioma ')\n    \n    elif pred[i] == y_test_new[i] == 3:\n        print(Fore.GREEN + 'Correct Prediction Pituitary ')\n    \n    else:\n        print(Fore.RED + 'InCorrect Prediction')","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:26:18.194891Z","iopub.execute_input":"2021-12-07T04:26:18.195315Z","iopub.status.idle":"2021-12-07T04:26:18.218718Z","shell.execute_reply.started":"2021-12-07T04:26:18.195276Z","shell.execute_reply":"2021-12-07T04:26:18.217982Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}},{"cell_type":"code","source":"score = model.evaluate(X_test, y_test, verbose = 1)\nscore[1]\n\nprint('The above ResNet50 model gave an accuracy of around 95% which is quite nice. I have modified the ResNet50 model further to get even more accuracy.')","metadata":{"execution":{"iopub.status.busy":"2021-12-07T04:26:18.220499Z","iopub.execute_input":"2021-12-07T04:26:18.220779Z","iopub.status.idle":"2021-12-07T04:26:18.513936Z","shell.execute_reply.started":"2021-12-07T04:26:18.220738Z","shell.execute_reply":"2021-12-07T04:26:18.513180Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":"---","metadata":{}}]}